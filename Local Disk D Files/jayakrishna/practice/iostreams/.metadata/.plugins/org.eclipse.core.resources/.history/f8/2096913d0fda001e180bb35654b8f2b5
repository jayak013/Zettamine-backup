package com.zettamine.iostreams.copy;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class ByteStreamFolderCopier implements FolderCopier {

	@Override
	public void replicate(String sourceFolder, String destinationFolder) {
		File sourceDirectory = new File(sourceFolder);
		File destinationDirectory = new File(destinationFolder);
		
		if (sourceDirectory.exists() && sourceDirectory.isDirectory()) {
            // Create the destination directory if it does not exist
            if (!destinationDirectory.exists()) {
                destinationDirectory.mkdirs();
            }

            // Get all files and directories from source directory
            File[] files = sourceDirectory.listFiles();

            // Loop through each file/directory and copy recursively
            for (File file : files) {
                File destination = new File(destinationDirectory, file.getName());

                if (file.isDirectory()) {
                    // If it's a directory, recursively copy it
                    replicate(file, destination);
                } else {
                    // If it's a file, copy it using byte streams
                    try (InputStream in = new FileInputStream(file);
                         OutputStream out = new FileOutputStream(destination)) {
                        // Transfer bytes from input stream to output stream
                        byte[] buffer = new byte[1024];
                        int length;
                        while ((length = in.read(buffer)) > 0) {
                            out.write(buffer, 0, length);
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            }
        } else {
            System.out.println("Source directory does not exist or is not a directory.");
        }
    }
	}

}
