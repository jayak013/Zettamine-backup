Working with JDBC Rowsets
=========================
A JDBC RowSet object holds tabular data in a way that makes it more flexible and easier to use than a result set

The advantages of using RowSet are given below:
 > It is easy and flexible to use.
 > It is Scrollable and Updatable by default.

Ref: https://www.codejava.net/java-se/jdbc/how-to-use-cachedrowset-in-jdbc

-> JdbcRowSet
-> CachedRowSet - stores data in memory so you can work on the data without keeping the connection open all the time
-> WebRowSet - can read and write data in XML format, making it possible to transfer the data through tiers in a web application.
-> JoinRowSet - combines data from different RowSet objects, which is equivalent to SQL JOIN queries.
-> FilteredRowSet - allows filtering data without having to write SQL SELECT queries.

	JdbcRowSet rowSet = RowSetProvider.newFactory().createJdbcRowSet();  
	rowSet.setUrl("jdbc:mysql://localhost:3306/db_zettamine");  
	rowSet.setUsername("root");  
	rowSet.setPassword("root");  
		           
	rowSet.setCommand("select * from emp");  
	rowSet.execute();  
		
	while(rowSet.next()) {


